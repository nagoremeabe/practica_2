{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Ejemplo para entender la práctica 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "En la práctica 2 estamos trabajando con series temporales. \n",
    "La idea es saber definir un índice con una definicion que se nos de\n",
    "Además,se nos pide que  sepamos analizar estos extremos, su función de probabilidad, periodo de retorno etc\n",
    "Igualmente sacar sus periodicidades y filtrarla para las diferentes frecuencias\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-2-6991d63f40c8>, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-2-6991d63f40c8>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    La parte más difícil es la de procesar los datos\u001b[0m\n\u001b[0m           ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "La parte más difícil es la de procesar los datos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "from scipy import stats \n",
    "from scipy import special\n",
    "from netCDF4 import Dataset\n",
    "import cartopy.crs as ccrs\n",
    "from cartopy.util import add_cyclic_point\n",
    "import xarray as xr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "def region(A,lonmin, lonmax, latmin, latmax):\n",
    "    reg = np.nanmean(A[:,:,(lon>lonmin)&(lon<lonmax)][:,(lat>latmin)&(lat<latmax),:],axis=(1,2))\n",
    "    n = reg.size\n",
    "    mreg = np.nanmean(reg,axis=0)\n",
    "    anom = reg.copy()*np.NaN\n",
    "    for j in range(n):\n",
    "            anom[j] = reg[j] - mreg\n",
    "    return anom"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Primero vamos a leer los datos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "path='/media/belen/C06C-A8BE/catedratica/curso_22_23/datos/SPAIN02/'\n",
    "file='Spain02_v5.0_DD_010reg_aa3d_pr.nc'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "a=xr.open_dataset(path+file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt;\n",
       "Dimensions:  (time: 16436, lat: 79, lon: 138)\n",
       "Coordinates:\n",
       "  * time     (time) datetime64[ns] 1971-01-01 1971-01-02 ... 2015-12-31\n",
       "  * lat      (lat) float64 36.0 36.1 36.2 36.3 36.4 ... 43.4 43.5 43.6 43.7 43.8\n",
       "  * lon      (lon) float64 -9.3 -9.2 -9.1 -9.0 -8.9 -8.8 ... 4.0 4.1 4.2 4.3 4.4\n",
       "Data variables:\n",
       "    pr       (time, lat, lon) float32 ...\n",
       "Attributes:\n",
       "    institution:     Santander Meteorology Group (UC-CSIC, www.meteo.unican.es)\n",
       "    references1:     Herrera, S., J. M. Gutierrez, R. Ancell, M. R. Pons, M. ...\n",
       "    references2:     Herrera, S., Fernandez, J. and Gutierrez, J.M. (2016) Up...\n",
       "    webpage:         http://www.meteo.unican.es/en/datasets/spain02\n",
       "    version:         5.0\n",
       "    title:           SPAIN02: daily gridded precipitation and temperature dat...\n",
       "    Conventions:     CF-1.6\n",
       "    conventionsURL:  http://www.cgd.ucar.edu/cms/eaton/cf-metadata/index.html\n",
       "    creation_date:   26-Jul-2017 09:54:32</pre><div class='xr-wrap' hidden><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-f7233dff-0232-47c3-8da6-48b08e192ac4' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-f7233dff-0232-47c3-8da6-48b08e192ac4' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 16436</li><li><span class='xr-has-index'>lat</span>: 79</li><li><span class='xr-has-index'>lon</span>: 138</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-c60d3c50-7edb-471f-973b-2dd62f0ae2dc' class='xr-section-summary-in' type='checkbox'  checked><label for='section-c60d3c50-7edb-471f-973b-2dd62f0ae2dc' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>1971-01-01 ... 2015-12-31</div><input id='attrs-bb6ac434-aff2-4c8c-8efe-a4d63e70ff06' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-bb6ac434-aff2-4c8c-8efe-a4d63e70ff06' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c37edcfd-5e14-4c00-bef4-07c4628aad4b' class='xr-var-data-in' type='checkbox'><label for='data-c37edcfd-5e14-4c00-bef4-07c4628aad4b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Time variable</dd><dt><span>_CoordinateAxisType :</span></dt><dd>Time</dd></dl></div><div class='xr-var-data'><pre>array([&#x27;1971-01-01T00:00:00.000000000&#x27;, &#x27;1971-01-02T00:00:00.000000000&#x27;,\n",
       "       &#x27;1971-01-03T00:00:00.000000000&#x27;, ..., &#x27;2015-12-29T00:00:00.000000000&#x27;,\n",
       "       &#x27;2015-12-30T00:00:00.000000000&#x27;, &#x27;2015-12-31T00:00:00.000000000&#x27;],\n",
       "      dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>36.0 36.1 36.2 ... 43.6 43.7 43.8</div><input id='attrs-2a747e7a-fba7-48af-94ff-e4213574d216' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-2a747e7a-fba7-48af-94ff-e4213574d216' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2a22990e-f017-42f2-a946-f379030376ce' class='xr-var-data-in' type='checkbox'><label for='data-2a22990e-f017-42f2-a946-f379030376ce' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>long_name :</span></dt><dd>latitude</dd><dt><span>units :</span></dt><dd>degrees north</dd><dt><span>_CoordinateAxisType :</span></dt><dd>Lat</dd></dl></div><div class='xr-var-data'><pre>array([36. , 36.1, 36.2, 36.3, 36.4, 36.5, 36.6, 36.7, 36.8, 36.9, 37. , 37.1,\n",
       "       37.2, 37.3, 37.4, 37.5, 37.6, 37.7, 37.8, 37.9, 38. , 38.1, 38.2, 38.3,\n",
       "       38.4, 38.5, 38.6, 38.7, 38.8, 38.9, 39. , 39.1, 39.2, 39.3, 39.4, 39.5,\n",
       "       39.6, 39.7, 39.8, 39.9, 40. , 40.1, 40.2, 40.3, 40.4, 40.5, 40.6, 40.7,\n",
       "       40.8, 40.9, 41. , 41.1, 41.2, 41.3, 41.4, 41.5, 41.6, 41.7, 41.8, 41.9,\n",
       "       42. , 42.1, 42.2, 42.3, 42.4, 42.5, 42.6, 42.7, 42.8, 42.9, 43. , 43.1,\n",
       "       43.2, 43.3, 43.4, 43.5, 43.6, 43.7, 43.8])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-9.3 -9.2 -9.1 -9.0 ... 4.2 4.3 4.4</div><input id='attrs-6e7cf539-3466-4863-b22f-ca899ead267c' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6e7cf539-3466-4863-b22f-ca899ead267c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a488ca1b-de27-4e5b-aea2-0c114ead5879' class='xr-var-data-in' type='checkbox'><label for='data-a488ca1b-de27-4e5b-aea2-0c114ead5879' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>long_name :</span></dt><dd>longitude</dd><dt><span>units :</span></dt><dd>degrees east</dd><dt><span>_CoordinateAxisType :</span></dt><dd>Lon</dd></dl></div><div class='xr-var-data'><pre>array([-9.3, -9.2, -9.1, -9. , -8.9, -8.8, -8.7, -8.6, -8.5, -8.4, -8.3, -8.2,\n",
       "       -8.1, -8. , -7.9, -7.8, -7.7, -7.6, -7.5, -7.4, -7.3, -7.2, -7.1, -7. ,\n",
       "       -6.9, -6.8, -6.7, -6.6, -6.5, -6.4, -6.3, -6.2, -6.1, -6. , -5.9, -5.8,\n",
       "       -5.7, -5.6, -5.5, -5.4, -5.3, -5.2, -5.1, -5. , -4.9, -4.8, -4.7, -4.6,\n",
       "       -4.5, -4.4, -4.3, -4.2, -4.1, -4. , -3.9, -3.8, -3.7, -3.6, -3.5, -3.4,\n",
       "       -3.3, -3.2, -3.1, -3. , -2.9, -2.8, -2.7, -2.6, -2.5, -2.4, -2.3, -2.2,\n",
       "       -2.1, -2. , -1.9, -1.8, -1.7, -1.6, -1.5, -1.4, -1.3, -1.2, -1.1, -1. ,\n",
       "       -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1,  0. ,  0.1,  0.2,\n",
       "        0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9,  1. ,  1.1,  1.2,  1.3,  1.4,\n",
       "        1.5,  1.6,  1.7,  1.8,  1.9,  2. ,  2.1,  2.2,  2.3,  2.4,  2.5,  2.6,\n",
       "        2.7,  2.8,  2.9,  3. ,  3.1,  3.2,  3.3,  3.4,  3.5,  3.6,  3.7,  3.8,\n",
       "        3.9,  4. ,  4.1,  4.2,  4.3,  4.4])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-2708f22f-53c6-41eb-9ec9-084c2290b4b2' class='xr-section-summary-in' type='checkbox'  checked><label for='section-2708f22f-53c6-41eb-9ec9-084c2290b4b2' class='xr-section-summary' >Data variables: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>pr</span></div><div class='xr-var-dims'>(time, lat, lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>...</div><input id='attrs-09e83bb9-36d6-4298-8789-853147a5d3ff' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-09e83bb9-36d6-4298-8789-853147a5d3ff' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-db8963ad-1b23-45ec-8c66-0858cafa286e' class='xr-var-data-in' type='checkbox'><label for='data-db8963ad-1b23-45ec-8c66-0858cafa286e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>precipitation_amount</dd><dt><span>long_name :</span></dt><dd>Precipitation amount</dd><dt><span>units :</span></dt><dd>kg m-2</dd></dl></div><div class='xr-var-data'><pre>[179185272 values with dtype=float32]</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-4cc26957-75bd-4389-811f-c35f473d45fe' class='xr-section-summary-in' type='checkbox'  checked><label for='section-4cc26957-75bd-4389-811f-c35f473d45fe' class='xr-section-summary' >Attributes: <span>(9)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>institution :</span></dt><dd>Santander Meteorology Group (UC-CSIC, www.meteo.unican.es)</dd><dt><span>references1 :</span></dt><dd>Herrera, S., J. M. Gutierrez, R. Ancell, M. R. Pons, M. D. Frias, and J. Fernandez, 2012: Development and analysis of a 50-year high-resolution daily gridded precipitation dataset over Spain (Spain02). Int. J. Climatol., 32, 74--85. DOI: 10.1002/joc.2256</dd><dt><span>references2 :</span></dt><dd>Herrera, S., Fernandez, J. and Gutierrez, J.M. (2016) Update of the Spain02 Gridded Observational Dataset for Euro-CORDEX evaluation: Assessing the Effect of the Interpolation Methodology. Int. J. Climatol., 36, 900--908, DOI: 10.1002/joc.4391</dd><dt><span>webpage :</span></dt><dd>http://www.meteo.unican.es/en/datasets/spain02</dd><dt><span>version :</span></dt><dd>5.0</dd><dt><span>title :</span></dt><dd>SPAIN02: daily gridded precipitation and temperature datasets for Spain</dd><dt><span>Conventions :</span></dt><dd>CF-1.6</dd><dt><span>conventionsURL :</span></dt><dd>http://www.cgd.ucar.edu/cms/eaton/cf-metadata/index.html</dd><dt><span>creation_date :</span></dt><dd>26-Jul-2017 09:54:32</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset>\n",
       "Dimensions:  (time: 16436, lat: 79, lon: 138)\n",
       "Coordinates:\n",
       "  * time     (time) datetime64[ns] 1971-01-01 1971-01-02 ... 2015-12-31\n",
       "  * lat      (lat) float64 36.0 36.1 36.2 36.3 36.4 ... 43.4 43.5 43.6 43.7 43.8\n",
       "  * lon      (lon) float64 -9.3 -9.2 -9.1 -9.0 -8.9 -8.8 ... 4.0 4.1 4.2 4.3 4.4\n",
       "Data variables:\n",
       "    pr       (time, lat, lon) float32 ...\n",
       "Attributes:\n",
       "    institution:     Santander Meteorology Group (UC-CSIC, www.meteo.unican.es)\n",
       "    references1:     Herrera, S., J. M. Gutierrez, R. Ancell, M. R. Pons, M. ...\n",
       "    references2:     Herrera, S., Fernandez, J. and Gutierrez, J.M. (2016) Up...\n",
       "    webpage:         http://www.meteo.unican.es/en/datasets/spain02\n",
       "    version:         5.0\n",
       "    title:           SPAIN02: daily gridded precipitation and temperature dat...\n",
       "    Conventions:     CF-1.6\n",
       "    conventionsURL:  http://www.cgd.ucar.edu/cms/eaton/cf-metadata/index.html\n",
       "    creation_date:   26-Jul-2017 09:54:32"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "## ahora definimos "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "lon=a.lon\n",
    "lat=a.lat"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "#vamos a calcular los wettest consecutive wet days\n",
    "#se agrupan los datos en medias acumuladas de 5 días y se toma el máximo de cada año\n",
    "preci=a.pr\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "preci2=preci.groupby('time.month')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DataArrayGroupBy, grouped over 'month'\n",
       "12 groups with labels 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12."
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "preci2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "#veamos el maximo de cada año cuanto vale\n",
    "julio=preci2[7]\n",
    "k=0\n",
    "verAirmax=np.zeros((45,79,138))\n",
    "for i in np.arange(1971,2015):\n",
    "    verAirmax[k,:,:]= np.array(julio[(julio.time.dt.year == i)].max(axis=0))\n",
    "    k+=1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PolyCollection at 0x7f1505682350>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pcolor(lon,lat,verAirmax[0,:,:].squeeze())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "Norte=region(verAirmax,-6, 0, 42.5, 43.8)\n",
    "Sur=region(verAirmax,-8, 0, 36, 38)\n",
    "Este=region(verAirmax,-2, 4, 36.2, 43)\n",
    "Oeste=region(verAirmax,-9, -6, 42, 43.8)\n",
    "Centro=region(verAirmax,-7, -1, 38, 42)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;lon&#x27; (lon: 138)&gt;\n",
       "array([-9.3, -9.2, -9.1, -9. , -8.9, -8.8, -8.7, -8.6, -8.5, -8.4, -8.3, -8.2,\n",
       "       -8.1, -8. , -7.9, -7.8, -7.7, -7.6, -7.5, -7.4, -7.3, -7.2, -7.1, -7. ,\n",
       "       -6.9, -6.8, -6.7, -6.6, -6.5, -6.4, -6.3, -6.2, -6.1, -6. , -5.9, -5.8,\n",
       "       -5.7, -5.6, -5.5, -5.4, -5.3, -5.2, -5.1, -5. , -4.9, -4.8, -4.7, -4.6,\n",
       "       -4.5, -4.4, -4.3, -4.2, -4.1, -4. , -3.9, -3.8, -3.7, -3.6, -3.5, -3.4,\n",
       "       -3.3, -3.2, -3.1, -3. , -2.9, -2.8, -2.7, -2.6, -2.5, -2.4, -2.3, -2.2,\n",
       "       -2.1, -2. , -1.9, -1.8, -1.7, -1.6, -1.5, -1.4, -1.3, -1.2, -1.1, -1. ,\n",
       "       -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1,  0. ,  0.1,  0.2,\n",
       "        0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9,  1. ,  1.1,  1.2,  1.3,  1.4,\n",
       "        1.5,  1.6,  1.7,  1.8,  1.9,  2. ,  2.1,  2.2,  2.3,  2.4,  2.5,  2.6,\n",
       "        2.7,  2.8,  2.9,  3. ,  3.1,  3.2,  3.3,  3.4,  3.5,  3.6,  3.7,  3.8,\n",
       "        3.9,  4. ,  4.1,  4.2,  4.3,  4.4])\n",
       "Coordinates:\n",
       "  * lon      (lon) float64 -9.3 -9.2 -9.1 -9.0 -8.9 -8.8 ... 4.0 4.1 4.2 4.3 4.4\n",
       "Attributes:\n",
       "    standard_name:        longitude\n",
       "    long_name:            longitude\n",
       "    units:                degrees east\n",
       "    _CoordinateAxisType:  Lon</pre><div class='xr-wrap' hidden><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'lon'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>lon</span>: 138</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-19774bcb-e5b7-4f13-99d3-908c8bf394c6' class='xr-array-in' type='checkbox' checked><label for='section-19774bcb-e5b7-4f13-99d3-908c8bf394c6' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>-9.3 -9.2 -9.1 -9.0 -8.9 -8.8 -8.7 ... 3.8 3.9 4.0 4.1 4.2 4.3 4.4</span></div><div class='xr-array-data'><pre>array([-9.3, -9.2, -9.1, -9. , -8.9, -8.8, -8.7, -8.6, -8.5, -8.4, -8.3, -8.2,\n",
       "       -8.1, -8. , -7.9, -7.8, -7.7, -7.6, -7.5, -7.4, -7.3, -7.2, -7.1, -7. ,\n",
       "       -6.9, -6.8, -6.7, -6.6, -6.5, -6.4, -6.3, -6.2, -6.1, -6. , -5.9, -5.8,\n",
       "       -5.7, -5.6, -5.5, -5.4, -5.3, -5.2, -5.1, -5. , -4.9, -4.8, -4.7, -4.6,\n",
       "       -4.5, -4.4, -4.3, -4.2, -4.1, -4. , -3.9, -3.8, -3.7, -3.6, -3.5, -3.4,\n",
       "       -3.3, -3.2, -3.1, -3. , -2.9, -2.8, -2.7, -2.6, -2.5, -2.4, -2.3, -2.2,\n",
       "       -2.1, -2. , -1.9, -1.8, -1.7, -1.6, -1.5, -1.4, -1.3, -1.2, -1.1, -1. ,\n",
       "       -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1,  0. ,  0.1,  0.2,\n",
       "        0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9,  1. ,  1.1,  1.2,  1.3,  1.4,\n",
       "        1.5,  1.6,  1.7,  1.8,  1.9,  2. ,  2.1,  2.2,  2.3,  2.4,  2.5,  2.6,\n",
       "        2.7,  2.8,  2.9,  3. ,  3.1,  3.2,  3.3,  3.4,  3.5,  3.6,  3.7,  3.8,\n",
       "        3.9,  4. ,  4.1,  4.2,  4.3,  4.4])</pre></div></div></li><li class='xr-section-item'><input id='section-ae02b53d-8a80-4d68-be72-344770dad690' class='xr-section-summary-in' type='checkbox'  checked><label for='section-ae02b53d-8a80-4d68-be72-344770dad690' class='xr-section-summary' >Coordinates: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-9.3 -9.2 -9.1 -9.0 ... 4.2 4.3 4.4</div><input id='attrs-e2b5f146-a270-46b3-82a1-ceb31bbe1a37' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e2b5f146-a270-46b3-82a1-ceb31bbe1a37' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-15b2169a-da21-40b2-86bd-fc271d51ebc3' class='xr-var-data-in' type='checkbox'><label for='data-15b2169a-da21-40b2-86bd-fc271d51ebc3' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>long_name :</span></dt><dd>longitude</dd><dt><span>units :</span></dt><dd>degrees east</dd><dt><span>_CoordinateAxisType :</span></dt><dd>Lon</dd></dl></div><div class='xr-var-data'><pre>array([-9.3, -9.2, -9.1, -9. , -8.9, -8.8, -8.7, -8.6, -8.5, -8.4, -8.3, -8.2,\n",
       "       -8.1, -8. , -7.9, -7.8, -7.7, -7.6, -7.5, -7.4, -7.3, -7.2, -7.1, -7. ,\n",
       "       -6.9, -6.8, -6.7, -6.6, -6.5, -6.4, -6.3, -6.2, -6.1, -6. , -5.9, -5.8,\n",
       "       -5.7, -5.6, -5.5, -5.4, -5.3, -5.2, -5.1, -5. , -4.9, -4.8, -4.7, -4.6,\n",
       "       -4.5, -4.4, -4.3, -4.2, -4.1, -4. , -3.9, -3.8, -3.7, -3.6, -3.5, -3.4,\n",
       "       -3.3, -3.2, -3.1, -3. , -2.9, -2.8, -2.7, -2.6, -2.5, -2.4, -2.3, -2.2,\n",
       "       -2.1, -2. , -1.9, -1.8, -1.7, -1.6, -1.5, -1.4, -1.3, -1.2, -1.1, -1. ,\n",
       "       -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1,  0. ,  0.1,  0.2,\n",
       "        0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9,  1. ,  1.1,  1.2,  1.3,  1.4,\n",
       "        1.5,  1.6,  1.7,  1.8,  1.9,  2. ,  2.1,  2.2,  2.3,  2.4,  2.5,  2.6,\n",
       "        2.7,  2.8,  2.9,  3. ,  3.1,  3.2,  3.3,  3.4,  3.5,  3.6,  3.7,  3.8,\n",
       "        3.9,  4. ,  4.1,  4.2,  4.3,  4.4])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-8a15e3c1-b591-40d6-b056-b9dd39642442' class='xr-section-summary-in' type='checkbox'  checked><label for='section-8a15e3c1-b591-40d6-b056-b9dd39642442' class='xr-section-summary' >Attributes: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>long_name :</span></dt><dd>longitude</dd><dt><span>units :</span></dt><dd>degrees east</dd><dt><span>_CoordinateAxisType :</span></dt><dd>Lon</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray 'lon' (lon: 138)>\n",
       "array([-9.3, -9.2, -9.1, -9. , -8.9, -8.8, -8.7, -8.6, -8.5, -8.4, -8.3, -8.2,\n",
       "       -8.1, -8. , -7.9, -7.8, -7.7, -7.6, -7.5, -7.4, -7.3, -7.2, -7.1, -7. ,\n",
       "       -6.9, -6.8, -6.7, -6.6, -6.5, -6.4, -6.3, -6.2, -6.1, -6. , -5.9, -5.8,\n",
       "       -5.7, -5.6, -5.5, -5.4, -5.3, -5.2, -5.1, -5. , -4.9, -4.8, -4.7, -4.6,\n",
       "       -4.5, -4.4, -4.3, -4.2, -4.1, -4. , -3.9, -3.8, -3.7, -3.6, -3.5, -3.4,\n",
       "       -3.3, -3.2, -3.1, -3. , -2.9, -2.8, -2.7, -2.6, -2.5, -2.4, -2.3, -2.2,\n",
       "       -2.1, -2. , -1.9, -1.8, -1.7, -1.6, -1.5, -1.4, -1.3, -1.2, -1.1, -1. ,\n",
       "       -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1,  0. ,  0.1,  0.2,\n",
       "        0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9,  1. ,  1.1,  1.2,  1.3,  1.4,\n",
       "        1.5,  1.6,  1.7,  1.8,  1.9,  2. ,  2.1,  2.2,  2.3,  2.4,  2.5,  2.6,\n",
       "        2.7,  2.8,  2.9,  3. ,  3.1,  3.2,  3.3,  3.4,  3.5,  3.6,  3.7,  3.8,\n",
       "        3.9,  4. ,  4.1,  4.2,  4.3,  4.4])\n",
       "Coordinates:\n",
       "  * lon      (lon) float64 -9.3 -9.2 -9.1 -9.0 -8.9 -8.8 ... 4.0 4.1 4.2 4.3 4.4\n",
       "Attributes:\n",
       "    standard_name:        longitude\n",
       "    long_name:            longitude\n",
       "    units:                degrees east\n",
       "    _CoordinateAxisType:  Lon"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lon"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(45,)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Norte.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,\n",
       "       1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,\n",
       "       1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,\n",
       "       2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,\n",
       "       2015])"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "years=np.arange(1971,2016)\n",
    "years"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Maximo de precipitacion')"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "ax.plot(years,Norte, 'b', label='precip max')\n",
    "ax.plot(years,Sur, 'r', label='precip max')\n",
    "ax.plot(years,Este, 'o', label='precip max')\n",
    "ax.plot(years,Oeste, 'g', label='precip max')\n",
    "ax.plot(years,Centro, 'c' ,label='precip max')\n",
    "\n",
    "ax.legend(['N','S','E','O','C'])\n",
    "ax.grid(True)\n",
    "ax.set_title('Maximo de precipitacion')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ya tengo las series de las diferentes regiones de la peninsula. Vamos ahora a analizar, para cada region\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A partir de aquí te dejo libre!!!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Cómo leer los datos de temperatura"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "path='/media/belen/C06C-A8BE/catedratica/curso_22_23/datos/STEAD/'\n",
    "file='tmin_pen.nc'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "b=xr.open_dataset(path+file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt;\n",
       "Dimensions:  (lon: 230, lat: 190, Time: 41638)\n",
       "Coordinates:\n",
       "  * lon      (lon) float64 -9.673 -9.614 -9.556 -9.497 ... 3.607 3.665 3.724\n",
       "  * lat      (lat) float64 44.17 44.12 44.08 44.03 ... 35.8 35.75 35.71 35.66\n",
       "  * Time     (Time) datetime64[ns] 1901-01-02 1901-01-03 ... 2015-01-01\n",
       "Data variables:\n",
       "    tn       (Time, lat, lon) float32 ...\n",
       "Attributes: (12/13)\n",
       "    title:             Daily minimum temperature of peninsular Spain\n",
       "    history:           version 1.0\n",
       "    keywords:          daily, minimum temperature, peninsular Spain, Spain\n",
       "    creator_name:      Roberto Serrano-Notivoli; Martin de Luis; Santiago Beg...\n",
       "    maintainer_name:   Roberto Serrano-Notivoli\n",
       "    maintainer_email:  rs@unizar.es\n",
       "    ...                ...\n",
       "    processing_level:  Quality-controlled. Final values.\n",
       "    acknowledgment:    This study was supported by research projects financed...\n",
       "    units:             Celsius degrees\n",
       "    id:                STEAD\n",
       "    sources:           AEMET and MAGRAMA\n",
       "    naming_authority:  Spanish TEmperature At Daily scale</pre><div class='xr-wrap' hidden><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-3f93e6ae-7133-4dfc-996d-b64ccc6a5dff' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-3f93e6ae-7133-4dfc-996d-b64ccc6a5dff' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>lon</span>: 230</li><li><span class='xr-has-index'>lat</span>: 190</li><li><span class='xr-has-index'>Time</span>: 41638</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-82432e24-3b8f-4046-8acf-f8a36402329b' class='xr-section-summary-in' type='checkbox'  checked><label for='section-82432e24-3b8f-4046-8acf-f8a36402329b' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-9.673 -9.614 ... 3.665 3.724</div><input id='attrs-37119062-87d2-43c1-9cce-22c2dd7be0d9' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-37119062-87d2-43c1-9cce-22c2dd7be0d9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7d839b90-f747-4c5a-9a5f-62cc56a852c8' class='xr-var-data-in' type='checkbox'><label for='data-7d839b90-f747-4c5a-9a5f-62cc56a852c8' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees_east</dd><dt><span>long_name :</span></dt><dd>lon</dd><dt><span>axis :</span></dt><dd>X</dd></dl></div><div class='xr-var-data'><pre>array([-9.672583, -9.614083, -9.555583, ...,  3.606917,  3.665417,  3.723917])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>44.17 44.12 44.08 ... 35.71 35.66</div><input id='attrs-19531765-f4ab-432e-a38d-db891cef57b0' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-19531765-f4ab-432e-a38d-db891cef57b0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0158a9db-f328-4c19-95d1-ade74e79de08' class='xr-var-data-in' type='checkbox'><label for='data-0158a9db-f328-4c19-95d1-ade74e79de08' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees_north</dd><dt><span>long_name :</span></dt><dd>lat</dd><dt><span>axis :</span></dt><dd>Y</dd></dl></div><div class='xr-var-data'><pre>array([44.169965, 44.124965, 44.079965, 44.034965, 43.989965, 43.944965,\n",
       "       43.899965, 43.854965, 43.809965, 43.764965, 43.719965, 43.674965,\n",
       "       43.629965, 43.584965, 43.539965, 43.494965, 43.449965, 43.404965,\n",
       "       43.359965, 43.314965, 43.269965, 43.224965, 43.179965, 43.134965,\n",
       "       43.089965, 43.044965, 42.999965, 42.954965, 42.909965, 42.864965,\n",
       "       42.819965, 42.774965, 42.729965, 42.684965, 42.639965, 42.594965,\n",
       "       42.549965, 42.504965, 42.459965, 42.414965, 42.369965, 42.324965,\n",
       "       42.279965, 42.234965, 42.189965, 42.144965, 42.099965, 42.054965,\n",
       "       42.009965, 41.964965, 41.919965, 41.874965, 41.829965, 41.784965,\n",
       "       41.739965, 41.694965, 41.649965, 41.604965, 41.559965, 41.514965,\n",
       "       41.469965, 41.424965, 41.379965, 41.334965, 41.289965, 41.244965,\n",
       "       41.199965, 41.154965, 41.109965, 41.064965, 41.019965, 40.974965,\n",
       "       40.929965, 40.884965, 40.839965, 40.794965, 40.749965, 40.704965,\n",
       "       40.659965, 40.614965, 40.569965, 40.524965, 40.479965, 40.434965,\n",
       "       40.389965, 40.344965, 40.299965, 40.254965, 40.209965, 40.164965,\n",
       "       40.119965, 40.074965, 40.029965, 39.984965, 39.939965, 39.894965,\n",
       "       39.849965, 39.804965, 39.759965, 39.714965, 39.669965, 39.624965,\n",
       "       39.579965, 39.534965, 39.489965, 39.444965, 39.399965, 39.354965,\n",
       "       39.309965, 39.264965, 39.219965, 39.174965, 39.129965, 39.084965,\n",
       "       39.039965, 38.994965, 38.949965, 38.904965, 38.859965, 38.814965,\n",
       "       38.769965, 38.724965, 38.679965, 38.634965, 38.589965, 38.544965,\n",
       "       38.499965, 38.454965, 38.409965, 38.364965, 38.319965, 38.274965,\n",
       "       38.229965, 38.184965, 38.139965, 38.094965, 38.049965, 38.004965,\n",
       "       37.959965, 37.914965, 37.869965, 37.824965, 37.779965, 37.734965,\n",
       "       37.689965, 37.644965, 37.599965, 37.554965, 37.509965, 37.464965,\n",
       "       37.419965, 37.374965, 37.329965, 37.284965, 37.239965, 37.194965,\n",
       "       37.149965, 37.104965, 37.059965, 37.014965, 36.969965, 36.924965,\n",
       "       36.879965, 36.834965, 36.789965, 36.744965, 36.699965, 36.654965,\n",
       "       36.609965, 36.564965, 36.519965, 36.474965, 36.429965, 36.384965,\n",
       "       36.339965, 36.294965, 36.249965, 36.204965, 36.159965, 36.114965,\n",
       "       36.069965, 36.024965, 35.979965, 35.934965, 35.889965, 35.844965,\n",
       "       35.799965, 35.754965, 35.709965, 35.664965])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>Time</span></div><div class='xr-var-dims'>(Time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>1901-01-02 ... 2015-01-01</div><input id='attrs-a6324657-0432-4b30-8712-7ff53e19d491' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-a6324657-0432-4b30-8712-7ff53e19d491' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-97d7e1b7-6736-40e7-81ce-5c446b7802c9' class='xr-var-data-in' type='checkbox'><label for='data-97d7e1b7-6736-40e7-81ce-5c446b7802c9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Time</dd><dt><span>axis :</span></dt><dd>T</dd></dl></div><div class='xr-var-data'><pre>array([&#x27;1901-01-02T00:00:00.000000000&#x27;, &#x27;1901-01-03T00:00:00.000000000&#x27;,\n",
       "       &#x27;1901-01-04T00:00:00.000000000&#x27;, ..., &#x27;2014-12-30T00:00:00.000000000&#x27;,\n",
       "       &#x27;2014-12-31T00:00:00.000000000&#x27;, &#x27;2015-01-01T00:00:00.000000000&#x27;],\n",
       "      dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-92a042b8-39ba-49ac-a7f8-7f66266c4c5d' class='xr-section-summary-in' type='checkbox'  checked><label for='section-92a042b8-39ba-49ac-a7f8-7f66266c4c5d' class='xr-section-summary' >Data variables: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>tn</span></div><div class='xr-var-dims'>(Time, lat, lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>...</div><input id='attrs-d02b6e16-2cc7-4118-9ae5-f94743da2d37' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-d02b6e16-2cc7-4118-9ae5-f94743da2d37' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7517ef89-9256-4e41-84f8-f81682a7ea33' class='xr-var-data-in' type='checkbox'><label for='data-7517ef89-9256-4e41-84f8-f81682a7ea33' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>Celsius degrees</dd><dt><span>long_name :</span></dt><dd>Minimum temperature</dd></dl></div><div class='xr-var-data'><pre>[1819580600 values with dtype=float32]</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-348ebdf8-1a05-4ff2-a011-fde59d1f0ae7' class='xr-section-summary-in' type='checkbox'  ><label for='section-348ebdf8-1a05-4ff2-a011-fde59d1f0ae7' class='xr-section-summary' >Attributes: <span>(13)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>title :</span></dt><dd>Daily minimum temperature of peninsular Spain</dd><dt><span>history :</span></dt><dd>version 1.0</dd><dt><span>keywords :</span></dt><dd>daily, minimum temperature, peninsular Spain, Spain</dd><dt><span>creator_name :</span></dt><dd>Roberto Serrano-Notivoli; Martin de Luis; Santiago Beguería</dd><dt><span>maintainer_name :</span></dt><dd>Roberto Serrano-Notivoli</dd><dt><span>maintainer_email :</span></dt><dd>rs@unizar.es</dd><dt><span>institution :</span></dt><dd>University of Zaragoza and CSIC</dd><dt><span>processing_level :</span></dt><dd>Quality-controlled. Final values.</dd><dt><span>acknowledgment :</span></dt><dd>This study was supported by research projects financed by the Spanish Ministerio de Economía y Competitividad (MINECO) and FEDER-ERDF funds. We were financially supported by the Government of Aragón through the ‘Programme of research groups’ (groups ‘H38, Clima, Cambio Global y Sistemas Naturales’ and ‘E68, Geomorfología y Cambio Global’)</dd><dt><span>units :</span></dt><dd>Celsius degrees</dd><dt><span>id :</span></dt><dd>STEAD</dd><dt><span>sources :</span></dt><dd>AEMET and MAGRAMA</dd><dt><span>naming_authority :</span></dt><dd>Spanish TEmperature At Daily scale</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset>\n",
       "Dimensions:  (lon: 230, lat: 190, Time: 41638)\n",
       "Coordinates:\n",
       "  * lon      (lon) float64 -9.673 -9.614 -9.556 -9.497 ... 3.607 3.665 3.724\n",
       "  * lat      (lat) float64 44.17 44.12 44.08 44.03 ... 35.8 35.75 35.71 35.66\n",
       "  * Time     (Time) datetime64[ns] 1901-01-02 1901-01-03 ... 2015-01-01\n",
       "Data variables:\n",
       "    tn       (Time, lat, lon) float32 ...\n",
       "Attributes: (12/13)\n",
       "    title:             Daily minimum temperature of peninsular Spain\n",
       "    history:           version 1.0\n",
       "    keywords:          daily, minimum temperature, peninsular Spain, Spain\n",
       "    creator_name:      Roberto Serrano-Notivoli; Martin de Luis; Santiago Beg...\n",
       "    maintainer_name:   Roberto Serrano-Notivoli\n",
       "    maintainer_email:  rs@unizar.es\n",
       "    ...                ...\n",
       "    processing_level:  Quality-controlled. Final values.\n",
       "    acknowledgment:    This study was supported by research projects financed...\n",
       "    units:             Celsius degrees\n",
       "    id:                STEAD\n",
       "    sources:           AEMET and MAGRAMA\n",
       "    naming_authority:  Spanish TEmperature At Daily scale"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "lon=b.lon\n",
    "lat=b.lat\n",
    "tmin=b.tn\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;tn&#x27; (Time: 41638, lat: 190, lon: 230)&gt;\n",
       "[1819580600 values with dtype=float32]\n",
       "Coordinates:\n",
       "  * lon      (lon) float64 -9.673 -9.614 -9.556 -9.497 ... 3.607 3.665 3.724\n",
       "  * lat      (lat) float64 44.17 44.12 44.08 44.03 ... 35.8 35.75 35.71 35.66\n",
       "  * Time     (Time) datetime64[ns] 1901-01-02 1901-01-03 ... 2015-01-01\n",
       "Attributes:\n",
       "    units:      Celsius degrees\n",
       "    long_name:  Minimum temperature</pre><div class='xr-wrap' hidden><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'tn'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>Time</span>: 41638</li><li><span class='xr-has-index'>lat</span>: 190</li><li><span class='xr-has-index'>lon</span>: 230</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-bff0fa7e-0266-4db9-b9b7-e9b5ff8deb93' class='xr-array-in' type='checkbox' checked><label for='section-bff0fa7e-0266-4db9-b9b7-e9b5ff8deb93' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>...</span></div><div class='xr-array-data'><pre>[1819580600 values with dtype=float32]</pre></div></div></li><li class='xr-section-item'><input id='section-0726b541-222f-4727-b980-d1757f96ca92' class='xr-section-summary-in' type='checkbox'  checked><label for='section-0726b541-222f-4727-b980-d1757f96ca92' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-9.673 -9.614 ... 3.665 3.724</div><input id='attrs-7853f032-880a-4409-92f8-db38a1660ebb' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-7853f032-880a-4409-92f8-db38a1660ebb' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d1e02276-e79a-44a1-8c63-496c5dad23dd' class='xr-var-data-in' type='checkbox'><label for='data-d1e02276-e79a-44a1-8c63-496c5dad23dd' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees_east</dd><dt><span>long_name :</span></dt><dd>lon</dd><dt><span>axis :</span></dt><dd>X</dd></dl></div><div class='xr-var-data'><pre>array([-9.672583, -9.614083, -9.555583, ...,  3.606917,  3.665417,  3.723917])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>44.17 44.12 44.08 ... 35.71 35.66</div><input id='attrs-09e360b0-7e81-4c55-ab09-a8c6b9e64381' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-09e360b0-7e81-4c55-ab09-a8c6b9e64381' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-411404ac-9720-4c4a-bcbd-6ea5f800d170' class='xr-var-data-in' type='checkbox'><label for='data-411404ac-9720-4c4a-bcbd-6ea5f800d170' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees_north</dd><dt><span>long_name :</span></dt><dd>lat</dd><dt><span>axis :</span></dt><dd>Y</dd></dl></div><div class='xr-var-data'><pre>array([44.169965, 44.124965, 44.079965, 44.034965, 43.989965, 43.944965,\n",
       "       43.899965, 43.854965, 43.809965, 43.764965, 43.719965, 43.674965,\n",
       "       43.629965, 43.584965, 43.539965, 43.494965, 43.449965, 43.404965,\n",
       "       43.359965, 43.314965, 43.269965, 43.224965, 43.179965, 43.134965,\n",
       "       43.089965, 43.044965, 42.999965, 42.954965, 42.909965, 42.864965,\n",
       "       42.819965, 42.774965, 42.729965, 42.684965, 42.639965, 42.594965,\n",
       "       42.549965, 42.504965, 42.459965, 42.414965, 42.369965, 42.324965,\n",
       "       42.279965, 42.234965, 42.189965, 42.144965, 42.099965, 42.054965,\n",
       "       42.009965, 41.964965, 41.919965, 41.874965, 41.829965, 41.784965,\n",
       "       41.739965, 41.694965, 41.649965, 41.604965, 41.559965, 41.514965,\n",
       "       41.469965, 41.424965, 41.379965, 41.334965, 41.289965, 41.244965,\n",
       "       41.199965, 41.154965, 41.109965, 41.064965, 41.019965, 40.974965,\n",
       "       40.929965, 40.884965, 40.839965, 40.794965, 40.749965, 40.704965,\n",
       "       40.659965, 40.614965, 40.569965, 40.524965, 40.479965, 40.434965,\n",
       "       40.389965, 40.344965, 40.299965, 40.254965, 40.209965, 40.164965,\n",
       "       40.119965, 40.074965, 40.029965, 39.984965, 39.939965, 39.894965,\n",
       "       39.849965, 39.804965, 39.759965, 39.714965, 39.669965, 39.624965,\n",
       "       39.579965, 39.534965, 39.489965, 39.444965, 39.399965, 39.354965,\n",
       "       39.309965, 39.264965, 39.219965, 39.174965, 39.129965, 39.084965,\n",
       "       39.039965, 38.994965, 38.949965, 38.904965, 38.859965, 38.814965,\n",
       "       38.769965, 38.724965, 38.679965, 38.634965, 38.589965, 38.544965,\n",
       "       38.499965, 38.454965, 38.409965, 38.364965, 38.319965, 38.274965,\n",
       "       38.229965, 38.184965, 38.139965, 38.094965, 38.049965, 38.004965,\n",
       "       37.959965, 37.914965, 37.869965, 37.824965, 37.779965, 37.734965,\n",
       "       37.689965, 37.644965, 37.599965, 37.554965, 37.509965, 37.464965,\n",
       "       37.419965, 37.374965, 37.329965, 37.284965, 37.239965, 37.194965,\n",
       "       37.149965, 37.104965, 37.059965, 37.014965, 36.969965, 36.924965,\n",
       "       36.879965, 36.834965, 36.789965, 36.744965, 36.699965, 36.654965,\n",
       "       36.609965, 36.564965, 36.519965, 36.474965, 36.429965, 36.384965,\n",
       "       36.339965, 36.294965, 36.249965, 36.204965, 36.159965, 36.114965,\n",
       "       36.069965, 36.024965, 35.979965, 35.934965, 35.889965, 35.844965,\n",
       "       35.799965, 35.754965, 35.709965, 35.664965])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>Time</span></div><div class='xr-var-dims'>(Time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>1901-01-02 ... 2015-01-01</div><input id='attrs-6c90f5ac-5e8d-4046-a378-26f188303ea5' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6c90f5ac-5e8d-4046-a378-26f188303ea5' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d531baee-f131-4f82-9436-1f2fbf1cb6a9' class='xr-var-data-in' type='checkbox'><label for='data-d531baee-f131-4f82-9436-1f2fbf1cb6a9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Time</dd><dt><span>axis :</span></dt><dd>T</dd></dl></div><div class='xr-var-data'><pre>array([&#x27;1901-01-02T00:00:00.000000000&#x27;, &#x27;1901-01-03T00:00:00.000000000&#x27;,\n",
       "       &#x27;1901-01-04T00:00:00.000000000&#x27;, ..., &#x27;2014-12-30T00:00:00.000000000&#x27;,\n",
       "       &#x27;2014-12-31T00:00:00.000000000&#x27;, &#x27;2015-01-01T00:00:00.000000000&#x27;],\n",
       "      dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-55b7cdb9-1644-4fe5-932c-6efa576e507d' class='xr-section-summary-in' type='checkbox'  checked><label for='section-55b7cdb9-1644-4fe5-932c-6efa576e507d' class='xr-section-summary' >Attributes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>Celsius degrees</dd><dt><span>long_name :</span></dt><dd>Minimum temperature</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray 'tn' (Time: 41638, lat: 190, lon: 230)>\n",
       "[1819580600 values with dtype=float32]\n",
       "Coordinates:\n",
       "  * lon      (lon) float64 -9.673 -9.614 -9.556 -9.497 ... 3.607 3.665 3.724\n",
       "  * lat      (lat) float64 44.17 44.12 44.08 44.03 ... 35.8 35.75 35.71 35.66\n",
       "  * Time     (Time) datetime64[ns] 1901-01-02 1901-01-03 ... 2015-01-01\n",
       "Attributes:\n",
       "    units:      Celsius degrees\n",
       "    long_name:  Minimum temperature"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tmin"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "tn2=tmin.groupby('Time.month')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;tn&#x27; (Time: 3534, lat: 190, lon: 230)&gt;\n",
       "[154435800 values with dtype=float32]\n",
       "Coordinates:\n",
       "  * lon      (lon) float64 -9.673 -9.614 -9.556 -9.497 ... 3.607 3.665 3.724\n",
       "  * lat      (lat) float64 44.17 44.12 44.08 44.03 ... 35.8 35.75 35.71 35.66\n",
       "  * Time     (Time) datetime64[ns] 1901-07-01 1901-07-02 ... 2014-07-31\n",
       "Attributes:\n",
       "    units:      Celsius degrees\n",
       "    long_name:  Minimum temperature</pre><div class='xr-wrap' hidden><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'tn'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>Time</span>: 3534</li><li><span class='xr-has-index'>lat</span>: 190</li><li><span class='xr-has-index'>lon</span>: 230</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-57e92b78-ba91-4014-bc08-f34c9dc5afb9' class='xr-array-in' type='checkbox' checked><label for='section-57e92b78-ba91-4014-bc08-f34c9dc5afb9' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>...</span></div><div class='xr-array-data'><pre>[154435800 values with dtype=float32]</pre></div></div></li><li class='xr-section-item'><input id='section-5cfe2c61-bf77-47e5-87e3-2634259e4d22' class='xr-section-summary-in' type='checkbox'  checked><label for='section-5cfe2c61-bf77-47e5-87e3-2634259e4d22' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-9.673 -9.614 ... 3.665 3.724</div><input id='attrs-850c5fa3-0663-47c1-af58-a5a8c53c1738' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-850c5fa3-0663-47c1-af58-a5a8c53c1738' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-842346d5-0dcf-4a64-a7de-2273510437dc' class='xr-var-data-in' type='checkbox'><label for='data-842346d5-0dcf-4a64-a7de-2273510437dc' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees_east</dd><dt><span>long_name :</span></dt><dd>lon</dd><dt><span>axis :</span></dt><dd>X</dd></dl></div><div class='xr-var-data'><pre>array([-9.672583, -9.614083, -9.555583, ...,  3.606917,  3.665417,  3.723917])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>44.17 44.12 44.08 ... 35.71 35.66</div><input id='attrs-0c3a917b-7049-42de-9798-162ba5a0e37b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-0c3a917b-7049-42de-9798-162ba5a0e37b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ca481e1b-2215-4dfa-ae64-401b8f123254' class='xr-var-data-in' type='checkbox'><label for='data-ca481e1b-2215-4dfa-ae64-401b8f123254' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees_north</dd><dt><span>long_name :</span></dt><dd>lat</dd><dt><span>axis :</span></dt><dd>Y</dd></dl></div><div class='xr-var-data'><pre>array([44.169965, 44.124965, 44.079965, 44.034965, 43.989965, 43.944965,\n",
       "       43.899965, 43.854965, 43.809965, 43.764965, 43.719965, 43.674965,\n",
       "       43.629965, 43.584965, 43.539965, 43.494965, 43.449965, 43.404965,\n",
       "       43.359965, 43.314965, 43.269965, 43.224965, 43.179965, 43.134965,\n",
       "       43.089965, 43.044965, 42.999965, 42.954965, 42.909965, 42.864965,\n",
       "       42.819965, 42.774965, 42.729965, 42.684965, 42.639965, 42.594965,\n",
       "       42.549965, 42.504965, 42.459965, 42.414965, 42.369965, 42.324965,\n",
       "       42.279965, 42.234965, 42.189965, 42.144965, 42.099965, 42.054965,\n",
       "       42.009965, 41.964965, 41.919965, 41.874965, 41.829965, 41.784965,\n",
       "       41.739965, 41.694965, 41.649965, 41.604965, 41.559965, 41.514965,\n",
       "       41.469965, 41.424965, 41.379965, 41.334965, 41.289965, 41.244965,\n",
       "       41.199965, 41.154965, 41.109965, 41.064965, 41.019965, 40.974965,\n",
       "       40.929965, 40.884965, 40.839965, 40.794965, 40.749965, 40.704965,\n",
       "       40.659965, 40.614965, 40.569965, 40.524965, 40.479965, 40.434965,\n",
       "       40.389965, 40.344965, 40.299965, 40.254965, 40.209965, 40.164965,\n",
       "       40.119965, 40.074965, 40.029965, 39.984965, 39.939965, 39.894965,\n",
       "       39.849965, 39.804965, 39.759965, 39.714965, 39.669965, 39.624965,\n",
       "       39.579965, 39.534965, 39.489965, 39.444965, 39.399965, 39.354965,\n",
       "       39.309965, 39.264965, 39.219965, 39.174965, 39.129965, 39.084965,\n",
       "       39.039965, 38.994965, 38.949965, 38.904965, 38.859965, 38.814965,\n",
       "       38.769965, 38.724965, 38.679965, 38.634965, 38.589965, 38.544965,\n",
       "       38.499965, 38.454965, 38.409965, 38.364965, 38.319965, 38.274965,\n",
       "       38.229965, 38.184965, 38.139965, 38.094965, 38.049965, 38.004965,\n",
       "       37.959965, 37.914965, 37.869965, 37.824965, 37.779965, 37.734965,\n",
       "       37.689965, 37.644965, 37.599965, 37.554965, 37.509965, 37.464965,\n",
       "       37.419965, 37.374965, 37.329965, 37.284965, 37.239965, 37.194965,\n",
       "       37.149965, 37.104965, 37.059965, 37.014965, 36.969965, 36.924965,\n",
       "       36.879965, 36.834965, 36.789965, 36.744965, 36.699965, 36.654965,\n",
       "       36.609965, 36.564965, 36.519965, 36.474965, 36.429965, 36.384965,\n",
       "       36.339965, 36.294965, 36.249965, 36.204965, 36.159965, 36.114965,\n",
       "       36.069965, 36.024965, 35.979965, 35.934965, 35.889965, 35.844965,\n",
       "       35.799965, 35.754965, 35.709965, 35.664965])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>Time</span></div><div class='xr-var-dims'>(Time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>1901-07-01 ... 2014-07-31</div><input id='attrs-a8980678-b284-47e4-8161-001da04f16d1' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-a8980678-b284-47e4-8161-001da04f16d1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b0900227-bc59-4b91-93fe-bee7b914915a' class='xr-var-data-in' type='checkbox'><label for='data-b0900227-bc59-4b91-93fe-bee7b914915a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Time</dd><dt><span>axis :</span></dt><dd>T</dd></dl></div><div class='xr-var-data'><pre>array([&#x27;1901-07-01T00:00:00.000000000&#x27;, &#x27;1901-07-02T00:00:00.000000000&#x27;,\n",
       "       &#x27;1901-07-03T00:00:00.000000000&#x27;, ..., &#x27;2014-07-29T00:00:00.000000000&#x27;,\n",
       "       &#x27;2014-07-30T00:00:00.000000000&#x27;, &#x27;2014-07-31T00:00:00.000000000&#x27;],\n",
       "      dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-699f4d02-fa96-4efb-aebe-2b5f904d4952' class='xr-section-summary-in' type='checkbox'  checked><label for='section-699f4d02-fa96-4efb-aebe-2b5f904d4952' class='xr-section-summary' >Attributes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>Celsius degrees</dd><dt><span>long_name :</span></dt><dd>Minimum temperature</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray 'tn' (Time: 3534, lat: 190, lon: 230)>\n",
       "[154435800 values with dtype=float32]\n",
       "Coordinates:\n",
       "  * lon      (lon) float64 -9.673 -9.614 -9.556 -9.497 ... 3.607 3.665 3.724\n",
       "  * lat      (lat) float64 44.17 44.12 44.08 44.03 ... 35.8 35.75 35.71 35.66\n",
       "  * Time     (Time) datetime64[ns] 1901-07-01 1901-07-02 ... 2014-07-31\n",
       "Attributes:\n",
       "    units:      Celsius degrees\n",
       "    long_name:  Minimum temperature"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tn2[7]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "#veamos el maximo de cada año cuanto vale\n",
    "julio=tn2[7]\n",
    "k=0\n",
    "verAirmin=np.zeros((115,190,230))\n",
    "for i in np.arange(1901,2015):\n",
    "    verAirmin[k,:,:]= np.array(julio[(julio.Time.dt.year == i)].max(axis=0))\n",
    "    k+=1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PolyCollection at 0x7f15029ed450>"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pcolor(lon,lat,verAirmin[0,:,:].squeeze())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "Nortet=region(verAirmin,-6, 0, 42.5, 43.8)\n",
    "Surt=region(verAirmin,-8, 0, 36, 38)\n",
    "Estet=region(verAirmin,-2, 4, 36.2, 43)\n",
    "Oestet=region(verAirmin,-9, -6, 42, 43.8)\n",
    "Centrot=region(verAirmin,-7, -1, 38, 42)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "years=np.arange(1901,2016)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Maximo de precipitacion')"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "ax.plot(years[:-1],Nortet[:-1], 'b', label='tmin')\n",
    "ax.plot(years[:-1],Surt[:-1], 'r', label='tmin')\n",
    "ax.plot(years[:-1],Estet[:-1], 'o', label='tmin')\n",
    "ax.plot(years[:-1],Oestet[:-1], 'g', label='tmin')\n",
    "ax.plot(years[:-1],Centrot[:-1], 'c' ,label='tmin')\n",
    "\n",
    "ax.legend(['N','S','E','O','C'])\n",
    "ax.grid(True)\n",
    "ax.set_title('Maximo de precipitacion')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
